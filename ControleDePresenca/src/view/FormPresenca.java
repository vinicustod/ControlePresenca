/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import VO.Aluno;
import VO.Evento;
import communication.client.ClientCommunication;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static view.FormEvento.evento;

/**
 *
 * @author viniciuscustodio
 */
public class FormPresenca extends javax.swing.JFrame {

    private TableRowSorter<TableModel> rowSorter;

    ArrayList<Evento> eventos = null;
    ArrayList<Aluno> alunos = null;
    ClientCommunication client = null;
    public static FormPresenca presenca = null;
    HashMap<Aluno, Integer> alunosOrganized;

    public static void createPresenca(ClientCommunication client) {
        if (presenca == null) {
            presenca = new FormPresenca();
        }

        presenca.setVisible(true);
        presenca.client = client;

        presenca.getAlunos();
        presenca.getEventos();

    }
    public static FormEvento evento = null;

    /**
     * Creates new form FormPresenca
     *
     * @param alunos
     */
    public void setAlunosInTablePresenca(ArrayList<Aluno> alunos) {
        //this.alunos = alunos;
        //Collections.sort(alunos);
        //alunosOrganized = new HashMap();

//        alunos.stream().forEach((al) -> {
//            alunosOrganized.put(al, al.getRa());
//        });

        // Atualizando a tabela
        DefaultTableModel model = (DefaultTableModel) tablePresenca.getModel();
        model.setRowCount(0);

        alunos.stream().forEach((al) -> {
            model.addRow(new Object[]{
                al.getRa(), al.getNome()
            });
        });
    }
    
    public void setAlunosInTable(ArrayList<Aluno> alunos) {
        this.alunos = alunos;
        Collections.sort(alunos);
        alunosOrganized = new HashMap();

        alunos.stream().forEach((al) -> {
            alunosOrganized.put(al, al.getRa());
        });

        // Atualizando a tabela
        DefaultTableModel model = (DefaultTableModel) tableAlunos.getModel();
        model.setRowCount(0);

        alunos.stream().forEach((al) -> {
            model.addRow(new Object[]{
                al.getRa(), al.getNome()
            });
        });
    }

    public void setEventosInTable(ArrayList<Evento> eventos) {
        this.eventos = eventos;

        DefaultComboBoxModel model = (DefaultComboBoxModel) jcbEvents.getModel();
        model.removeAllElements();
        model.addElement("");
        eventos.stream().forEach((ev) -> {
            model.addElement(ev);
        });
        model.setSelectedItem("");
    }

    private void getEventos() {
        client.setWaitingRequest(this);
        client.sendMessage("17");
    }

    private void getAlunos() {
        client.setWaitingRequest(this);
        client.sendMessage("27");
    }

    public FormPresenca() {
        initComponents();
        rowSorter = new TableRowSorter<>(tableAlunos.getModel());
        tableAlunos.setRowSorter(rowSorter);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAlunos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePresenca = new javax.swing.JTable();
        jcbEvents = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfSearchStudent = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Registrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "RA", "Nome"
            }
        ));
        jScrollPane1.setViewportView(tableAlunos);

        tablePresenca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "RA", "Nome"
            }
        ));
        jScrollPane2.setViewportView(tablePresenca);

        jcbEvents.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEventsActionPerformed(evt);
            }
        });

        jLabel1.setText("Evento:");

        jLabel2.setText("Pesquisa Alunos:");

        tfSearchStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchStudentActionPerformed(evt);
            }
        });
        tfSearchStudent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSearchStudentKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfSearchStudentKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSearchStudentKeyReleased(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remove");

        Registrar.setText("Registrar");
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSearchStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbEvents, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(67, 67, 67))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Registrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbEvents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfSearchStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Registrar)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tfSearchStudentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchStudentKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_tfSearchStudentKeyPressed

    private void tfSearchStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchStudentActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_tfSearchStudentActionPerformed

    private void tfSearchStudentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchStudentKeyTyped

// TODO add your handling code here:
    }//GEN-LAST:event_tfSearchStudentKeyTyped

    private void tfSearchStudentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchStudentKeyReleased
        String text = tfSearchStudent.getText();
        if (text.trim().length() == 0) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }
// TODO add your handling code here:
    }//GEN-LAST:event_tfSearchStudentKeyReleased

    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarActionPerformed
        DefaultTableModel presenca = (DefaultTableModel) tablePresenca.getModel();
        for (int i = 0; i < presenca.getRowCount(); i++) {
            client.sendMessage("31;" + alunosOrganized.get(presenca.getValueAt(i, 0)) + ";" + ((Evento) jcbEvents.getSelectedItem()).getIdEvento());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_RegistrarActionPerformed

    private void jcbEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEventsActionPerformed
        DefaultComboBoxModel model = (DefaultComboBoxModel) jcbEvents.getModel();
        Object selected = jcbEvents.getSelectedItem();
        if (selected != null) {
            if (!selected.equals("")) {
                client.sendMessage("33;" + ((Evento) selected).getIdEvento());
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEventsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPresenca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPresenca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPresenca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPresenca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPresenca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Registrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcbEvents;
    private javax.swing.JTable tableAlunos;
    private javax.swing.JTable tablePresenca;
    private javax.swing.JTextField tfSearchStudent;
    // End of variables declaration//GEN-END:variables
}
